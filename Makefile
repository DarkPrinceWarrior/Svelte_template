# ะะฐัััะพะนะบะธ
DEV_COMPOSE_FILE = ./docker/compose.dev.yaml   # Compose ัะฐะนะป ะดะปั ัะฐะทัะฐะฑะพัะบะธ
PROD_COMPOSE_FILE = ./docker/compose.prod.yaml # Compose ัะฐะนะป ะดะปั ะฟัะพะดะฐะบัะตะฝะฐ
DEV_DOCKERFILE = ./docker/Dockerfile.dev       # Dockerfile ะดะปั ัะฐะทัะฐะฑะพัะบะธ
PROD_DOCKERFILE = ./docker/Dockerfile.prod     # Dockerfile ะดะปั ะฟัะพะดะฐะบัะตะฝะฐ

# ะััั ะฒ ัะตะตัััะต
REGISTRY_PATH = registry.ds-mind-lab.ru/developers

# ะกะฟัะฐะฒะบะฐ
.PHONY: help
help: ## ะะพะบะฐะทะฐัั ััั ัะฟัะฐะฒะบั
	@echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"
	@echo " ๐  \033[1mะกะฟัะฐะฒะบะฐ ะฟะพ Makefile\033[0m"
	@echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"
	@echo ""
	@echo "โก ะัะฟะพะปัะทะพะฒะฐะฝะธะต: \033[32mmake [ัะตะปั]\033[0m"
	@echo ""
	@echo "๐ฏ ะะพัััะฟะฝัะต ัะตะปะธ:"
	@grep -E '^[a-zA-Z0-9_-]+:.*?## .*$$' $(MAKEFILE_LIST) \
		| sort \
		| awk 'BEGIN {FS = ":.*?## "}; \
			{printf "   โค \033[36m%-20s\033[0m โ %s\n", $$1, $$2}'
	@echo ""
	@echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"

## ะกัะตะดะฐ ัะฐะทัะฐะฑะพัะบะธ
development-up: ## ะะฐะฟัััะธัั ะบะพะฝัะตะนะฝะตัั ะดะปั ัะฐะทัะฐะฑะพัะบะธ
	docker compose -f $(DEV_COMPOSE_FILE) up -d

development-watch: ## ะะฐะฟัััะธัั ะบะพะฝัะตะนะฝะตัั ะดะปั ัะฐะทัะฐะฑะพัะบะธ ั ัะธะฝััะพะฝะธะทะฐัะธะตะน ัะฐะนะปะพะฒ
	docker compose -f $(DEV_COMPOSE_FILE) watch

development-down: ## ะััะฐะฝะพะฒะธัั ะบะพะฝัะตะนะฝะตัั ัะฐะทัะฐะฑะพัะบะธ
	docker compose -f $(DEV_COMPOSE_FILE) down

development-build: ## ะะตัะตัะพะฑัะฐัั ะบะพะฝัะตะนะฝะตัั ัะฐะทัะฐะฑะพัะบะธ
	docker compose -f $(DEV_COMPOSE_FILE) build

development-logs: ## ะะพะบะฐะทะฐัั ะปะพะณะธ ะบะพะฝัะตะนะฝะตัะพะฒ ัะฐะทัะฐะฑะพัะบะธ
	docker compose -f $(DEV_COMPOSE_FILE) logs -f

development-restart: development-down development-up ## ะะตัะตะทะฐะฟัััะธัั ะบะพะฝัะตะนะฝะตัั ัะฐะทัะฐะฑะพัะบะธ

## ะะปะธะฐัั ะดะปั dev
dev-up du: development-up
dev-watch dw: development-watch
dev-down dd: development-down
dev-build db: development-build
dev-logs dl: development-logs
dev-restart dr: development-restart

## ะัะพะดะฐะบัะตะฝ ััะตะดะฐ
production-up: ## ะะฐะฟัััะธัั ะฟัะพะดะฐะบัะตะฝ ะบะพะฝัะตะนะฝะตัั
	docker compose -f $(PROD_COMPOSE_FILE) up -d

production-down: ## ะััะฐะฝะพะฒะธัั ะฟัะพะดะฐะบัะตะฝ ะบะพะฝัะตะนะฝะตัั
	docker compose -f $(PROD_COMPOSE_FILE) down

production-build: ## ะะตัะตัะพะฑัะฐัั ะฟัะพะดะฐะบัะตะฝ ะบะพะฝัะตะนะฝะตัั (ะฑะตะท ะบััะฐ)
	docker compose -f $(PROD_COMPOSE_FILE) build --no-cache

production-logs: ## ะะพะบะฐะทะฐัั ะปะพะณะธ ะฟัะพะดะฐะบัะตะฝ ะบะพะฝัะตะนะฝะตัะพะฒ
	docker compose -f $(PROD_COMPOSE_FILE) logs -f

production-restart: production-down production-up ## ะะตัะตะทะฐะฟัััะธัั ะฟัะพะดะฐะบัะตะฝ ะบะพะฝัะตะนะฝะตัั

production-pull: ## ะะฑะฝะพะฒะธัั ะพะฑัะฐะทั ะดะปั ะฟัะพะดะฐะบัะตะฝะฐ
	docker compose -f $(PROD_COMPOSE_FILE) pull

## ะะปะธะฐัั ะดะปั prod
prod-up pu: production-up
prod-down pd: production-down
prod-build pb: production-build
prod-logs pl: production-logs
prod-restart pr: production-restart
prod-pull pp: production-pull

## ะะฑัะธะต ะทะฐะดะฐัะธ
ps: ## ะะพะบะฐะทะฐัั ะฒัะต ะบะพะฝัะตะนะฝะตัั
	@echo "ะะพะฝัะตะนะฝะตัั ัะฐะทัะฐะฑะพัะบะธ:"
	@docker compose -f $(DEV_COMPOSE_FILE) ps
	@echo "\nะัะพะดะฐะบัะตะฝ ะบะพะฝัะตะนะฝะตัั:"
	@docker compose -f $(PROD_COMPOSE_FILE) ps

clean: development-down production-down ## ะััะฐะฝะพะฒะธัั ะฒัะต ะบะพะฝัะตะนะฝะตัั
	@echo "ะัะต ะบะพะฝัะตะนะฝะตัั ะพััะฐะฝะพะฒะปะตะฝั"

## ะกะฑะพัะบะฐ ะพะฑัะฐะทะพะฒ
build-image: ## ะกะพะฑัะฐัั ะพะฑัะฐะท ะดะปั ะฟัะพะดะฐะบัะตะฝะฐ
	docker build -f $(PROD_DOCKERFILE) -t $(REGISTRY_PATH):latest .

